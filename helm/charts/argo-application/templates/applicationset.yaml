{{- $releaseLabels := include "argo-application.labels" . -}}
{{- $values := .Values -}}
{{- range $clusterName := $values.clusters }}
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: {{ $clusterName }}-appset
  namespace: openshift-gitops
  labels:
    {{- $releaseLabels | nindent 4 }}
spec:
  generators:
    {{- if eq $clusterName "bootstrap-argo" }}
    - matrix:
        generators:
          - clusterDecisionResource:
              configMapRef: acm-placement
              labelSelector:
                matchLabels:
                  cluster.open-cluster-management.io/placement: default-clusterset
              requeueAfterSeconds: 300
          - git:
              repoURL: {{ $values.git.url }}
              revision: {{ $values.git.revision }}
              directories:
                - path: kustomize/argo-bootstrap/*
              requeueAfterSeconds: 300
    {{- else if eq $clusterName "bootstrap-overlays" }}
    - clusterDecisionResource:
        configMapRef: acm-placement
        labelSelector:
          matchLabels:
            cluster.open-cluster-management.io/placement: default-clusterset
        requeueAfterSeconds: 300
    {{-  else }}
    - git:
        repoURL: {{ $values.git.url }}
        revision: {{ $values.git.revision }}
        directories:
          - path: kustomize/cluster-overlays/{{ required "A valid cluster name is required!" $clusterName }}/*
    - git:
        repoURL: {{ $values.git.url }}
        revision: {{ $values.git.revision }}
        directories:
          - path: helm/cluster-overlays/{{ required "A valid cluster name is required!" $clusterName }}/*
        template:
          metadata: {}
          spec:
            project: "default"
            source:
              repoURL: {{ $values.git.url }}
              path: helm/charts/{{`{{.path.basename}}`}}
              helm:
                valueFiles:
                  - ../../cluster-overlays/{{ required "A valid cluster name is required!" $clusterName }}/{{`{{.path.basename}}`}}/values.yaml
            destination:
              server: "https://kubernetes.default.svc"
    {{- end }}
  strategy:
    type: RollingSync
    rollingSync:
      steps:
        - matchExpressions:
            - key: type
              operator: In
              values:
                - operator
                - chart
        - matchExpressions:
            - key: type
              operator: In
              values:
                - config
        - matchExpressions:
            - key: type
              operator: In
              values:
                - placement
        - matchExpressions:
            - key: type
              operator: In
              values:
                - application
                - policy
        - matchExpressions:
            - key: type
              operator: In
              values:
                - cluster
  goTemplate: true
  template:
    metadata:
      {{- if eq $clusterName "bootstrap-overlays" }}
      name: {{$clusterName}}-{{`{{.name}}`}}-appset
      {{- else if eq $clusterName "bootstrap-argo" }}
      name: {{$clusterName}}-{{`{{.name}}-{{.path.basename}}`}}
      {{- else }}
      name: '{{ `{{.path.basename}}` }}'
      {{- end }}
      labels:
      {{- if eq $clusterName "bootstrap-overlays" }}
        type: application
      {{- else }}
        type: '{{`{{ .path.basename | splitList "-" | last }}`}}'
      {{- end }}
    spec:
      ignoreDifferences:
      - group: ""
        kind: Secret
        jsonPointers:
        - /data
      - group: metal3.io
        kind: BareMetalHost
        jsonPointers:
        - /spec/automatedCleaningMode
        - /spec/online      
      destination:
        {{- if contains "bootstrap" $clusterName }}
        server: "{{`{{.server}}`}}"
        {{- else }}
        server: "https://kubernetes.default.svc"
        {{- end }}
      project: default
      syncPolicy:
        retry:
          limit: 10
          backoff:
            duration: "120s"
            factor: 3
            maxDuration: "10m0s"
        syncOptions:
          - SkipDryRunOnMissingResource=true
          - Validate=false
          - ApplyOutOfSyncOnly=true
          - RespectIgnoreDifferences=true
          - Prune=true
      {{- if eq $clusterName "bootstrap-overlays" }}
      source:
        repoURL: {{ $values.git.url }}
        path: helm/charts/argo-application
        targetRevision: {{ $values.git.revision }}
        helm:
          parameters:
            - name: clusters.0
              value: "{{`{{.name}}`}}"
      {{- else }}
      source:
        path: "{{`{{.path.path}}`}}"
        repoURL: {{ $values.git.url }}
        targetRevision: {{ $values.git.revision }}
      {{- end }}
{{- end }}
